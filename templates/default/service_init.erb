#!/bin/bash

# This file is managed by Chef.
# DO NOT MODIFY this file locally, it will be overwritten by Chef.
#
### BEGIN INIT INFO
# chkconfig: 345 20 80
# description: <%= @service_name -%> daemon
# processname: <%= @service_name %>
#
# Provides:          <%= @service_name %>
# Default-Start:     3 4 5
# Default-Stop:      0 1 6
# Short-Description: <%= @service_name -%> daemon
# Description:       <%= @service_name -%> service for
#                    <%= @service_name -%> java project repository.
### END INIT INFO

PLATFORM_FAMILY=<%= node['platform_family'] %>

SERVICE_USER=<%= @user %>
SERVICE_GROUP=<%= @group %>

PROGRAM=<%= @service_name %>
PID_FILE=<%= @pid_file %>

LOG_FILE="1>> <%= @log_file -%> 2>&1"

# stale symlinks
SERVICE_HOME=<%= @home %>
test -d $SERVICE_BASE || {
  echo -n "$SERVICE_HOME does not exists or has stale symlink" ;
  exit 1 ;
}

SERVICE_IDENTIFIER="<%= @service_name %>.dummy_process_identifier"
SERVICE_IDENTIFIER_OPTION="-Ddummy_process_identifier.value=$SERVICE_IDENTIFIER"

JAVA_BINARY=`which java`
test -x $JAVA_BINARY || {
  echo "missing java" ;
  exit 1
}

WAIT_FOR_START=10

# service options
JAVA_OPTIONS="$JAVA_OPTIONS <%= @options -%>"

# jar file
<% if @jar -%>
JAR_FILE="-jar <%= @jar -%>"
<% end -%>

# service options
JAVA_ARGS="$JAVA_ARGS <%= @args -%>"

# class path
CLASS_PATH="$CLASS_PATH <%= @class_path -%>"

# class name
CLASS_NAME="<%= @class_name -%>"

case $PLATFORM_FAMILY in
  "debian")
    functions_file=/lib/lsb/init-functions
    ;;
  "rhel")
    functions_file=/etc/init.d/functions
    ;;
esac

. $functions_file

# java options
JAVA_OPTIONS="$CLASS_PATH $JAR_FILE $JAVA_OPTIONS $SERVICE_IDENTIFIER_OPTION $CLASS_NAME $JAVA_ARGS"

RETVAL=0

# Common
service_start_pre_check() {
  if [ -s $PID_FILE ]; then
    process_pid=$(cat $PID_FILE)
    ps -p $process_pid > /dev/null
    if [ $? == 0 ]; then
      echo -n "$PROGRAM is already running ($PID_FILE)"
      echo
      exit 0
    else
      echo -n "$PROGRAM is dead and pid file exists($PID_FILE)"
      echo
      exit 1
    fi
  fi
}

service_stop_pre_check() {
  if [ ! -f $PID_FILE ]; then
    echo -n "$PROGRAM is already stopped"
    echo
    exit 0
  else
    process_pid=$(cat $PID_FILE)
    ps -p $process_pid > /dev/null
    if [ $? != 0 ]; then
      rm -fr $PID_FILE
      echo "$PROGRAM is dead and pid file exists($PID_FILE) .. pid file removed"
      echo
      exit 0
    fi
  fi
}

# RHEL Platform Family Service Management
rhel_service_start() {
    service_start_pre_check
    echo -n "Starting $PROGRAM .."
    daemon --user $SERVICE_USER --pidfile $PID_FILE $JAVA_BINARY $JAVA_OPTIONS $LOG_FILE &
    RETVAL=$?
    sleep 5
    if [ $RETVAL = 0 ]; then
      # get PID
      /bin/ps hww -u "$SERVICE_USER" -o sess,ppid,pid,comm,cmd | \
        while read sess ppid pid comm cmd; do
          # Check Service Name
          service_exec=$(echo $comm| tr -d ' ')
          if [ $service_exec == 'java' ]; then
            echo $cmd | grep "$SERVICE_IDENTIFIER" > /dev/null
            if [ $? = 0 ]; then
              # found PID
              echo $pid > $PID_FILE
              break
            fi
          fi
        done
      if [ -s $PID_FILE ]; then
        success
      else
        failure
      fi
    else
      failure
    fi
    echo
}

rhel_service_stop() {
  service_stop_pre_check
  echo -n "Stopping $PROGRAM .."
  killproc -p $PID_FILE $PROGRAM
  RETVAL=$?
  echo

}

rhel_service_status() {
    status -p $PID_FILE $PROGRAM
    RETVAL=$?
}

# Debian Platform Family Service Management
debian_service_start() {
    service_start_pre_check
    start-stop-daemon --start --background --make-pidfile --chuid $SERVICE_USER --user $SERVICE_USER --pidfile $PID_FILE --exec $JAVA_BINARY -- $JAVA_OPTIONS $LOG_FILE
    RETVAL=$?
    if [ $RETVAL == 0 ]; then
      log_success_msg "Starting $PROGRAM                 [OK]"
    else
      log_failure_msg "Starting $PROGRAM                 [FAILED]"
    fi
}

debian_service_stop() {
  service_stop_pre_check
  #killproc -p $PID_FILE
  start-stop-daemon --stop --exec $JAVA_BINARY --pidfile $PID_FILE
  RETVAL=$?
  if [ $RETVAL == 0 ]; then
    rm -f $PID_FILE
    log_success_msg "Stopping $PROGRAM              [OK]"
  else
    log_failure_msg "Stopping $PROGRAM              [FAILED]"
  fi
}

debian_service_status() {
  #status_of_proc -p $PID_FILE $JAVA_BINARY $PROGRAM
  #RETVAL=$?
  if [ -s $PID_FILE ]; then
    process_pid=$(cat $PID_FILE)
    ps -p $process_pid > /dev/null
    if [ $? == 0 ]; then
      echo -n "Service is running($process_pid) .."
      echo
      RETVAL=0
    else
      echo -n "Service is dead and pid file exists($PID_FILE) .."
      echo
      RETVAL=1
    fi
  else
    echo -n "Service is not running .."
    echo
    RETVAL=3
  fi
}

# Process Service Action
case "$PLATFORM_FAMILY" in
  rhel)
    case "$1" in
      start)
        rhel_service_start
        ;;
      stop)
        rhel_service_stop
        ;;
      status)
        rhel_service_status
        ;;
      restart)
        rhel_service_stop
        sleep 5
        rhel_service_start
        ;;
      *)
        echo "Usage: $0 {start|stop|status|restart}"
        RETVAL=1
    esac
    ;;
  debian)
    case "$1" in
      start)
        debian_service_start
        ;;
      stop)
        debian_service_stop
        ;;
      status)
        debian_service_status
        ;;
      restart)
        debian_service_stop
        sleep 5
        debian_service_start
        ;;
      *)
        echo "Usage: $0 {start|stop|status|restart}"
        RETVAL=1
    esac
    ;;
  *)
    echo "Unkown Platform Family, valid are 'debian rhel'"
    RETVAL 1
esac

exit $RETVAL
